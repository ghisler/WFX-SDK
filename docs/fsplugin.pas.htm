<HTML><HEAD>
<meta http-equiv=Content-Type content="text/html; charset=iso-8859-1">
	
	<TITLE>fsplugin.pas</TITLE>
	
	<META NAME="AUTHOR" CONTENT="Copyright ©2002-2019 Christian Ghisler">
	<META NAME="GENERATOR" CONTENT="HelpScribble 7.8.0">
<link href="ie.css" type="text/css" rel="stylesheet">
<!--[if gte IE 5]>
<style type="text/css">@import url(ie5+.css);</style>
<![endif]-->
</HEAD>
<BODY>
<div class="p8"><B>unit fsplugin;&nbsp;&nbsp;&nbsp; {Plugin definitions version 2.1}</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>interface</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>uses windows;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>{ ids for FsGetFile }</B></div>
<div class="p8"><B>const FS_FILE_OK=0;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_FILE_EXISTS=1;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_FILE_NOTFOUND=2;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_FILE_READERROR=3;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_FILE_WRITEERROR=4;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_FILE_USERABORT=5;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_FILE_NOTSUPPORTED=6;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_FILE_EXISTSRESUMEALLOWED=7;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_EXEC_OK=0;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_EXEC_ERROR=1;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_EXEC_YOURSELF=-1;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_EXEC_SYMLINK=-2;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_COPYFLAGS_OVERWRITE=1;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_COPYFLAGS_RESUME=2;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_COPYFLAGS_MOVE=4;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_COPYFLAGS_EXISTS_SAMECASE=8;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_COPYFLAGS_EXISTS_DIFFERENTCASE=16;</B></div>
<div class="p8"><B>&nbsp;</B></div>
<div class="p8"><B>{ flags for tRequestProc }</B></div>
<div class="p8"><B>const</B></div>
<div class="p8"><B>&nbsp; RT_Other=0;</B></div>
<div class="p8"><B>&nbsp; RT_UserName=1;</B></div>
<div class="p8"><B>&nbsp; RT_Password=2;</B></div>
<div class="p8"><B>&nbsp; RT_Account=3;</B></div>
<div class="p8"><B>&nbsp; RT_UserNameFirewall=4;</B></div>
<div class="p8"><B>&nbsp; RT_PasswordFirewall=5;</B></div>
<div class="p8"><B>&nbsp; RT_TargetDir=6;</B></div>
<div class="p8"><B>&nbsp; RT_URL=7;</B></div>
<div class="p8"><B>&nbsp; RT_MsgOK=8;</B></div>
<div class="p8"><B>&nbsp; RT_MsgYesNo=9;</B></div>
<div class="p8"><B>&nbsp; RT_MsgOKCancel=10;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>{ flags for tLogProc }</B></div>
<div class="p8"><B>const msgtype_connect=1;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; msgtype_disconnect=2;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; msgtype_details=3;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; msgtype_transfercomplete=4;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; msgtype_connectcomplete=5;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; msgtype_importanterror=6;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; msgtype_operationcomplete=7;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>{ flags for FsStatusInfo }</B></div>
<div class="p8"><B>const FS_STATUS_START=0;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_END=1;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_LIST=1;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_GET_SINGLE=2;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_GET_MULTI=3;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_PUT_SINGLE=4;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_PUT_MULTI=5;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_RENMOV_SINGLE=6;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_RENMOV_MULTI=7;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_DELETE=8;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_ATTRIB=9;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_MKDIR=10;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_EXEC=11;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_CALCSIZE=12;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_SEARCH=13;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_SEARCH_TEXT=14;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_SYNC_SEARCH=15;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_SYNC_GET=16;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_SYNC_PUT=17;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_SYNC_DELETE=18;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_GET_MULTI_THREAD=19;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_STATUS_OP_PUT_MULTI_THREAD=20;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>{Flags for FsExtractCustomIcon}</B></div>
<div class="p8"><B>const FS_ICONFLAG_SMALL=1;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_ICONFLAG_BACKGROUND=2;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_ICON_USEDEFAULT=0;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_ICON_EXTRACTED=1;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_ICON_EXTRACTED_DESTROY=2;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_ICON_DELAYED=3;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>const FS_BITMAP_NONE=0;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_BITMAP_EXTRACTED=1;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_BITMAP_EXTRACT_YOURSELF=2;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_BITMAP_EXTRACT_YOURSELF_ANDDELETE=3;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_BITMAP_CACHE=256;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>{Flags for crypto callback function}</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_CRYPT_SAVE_PASSWORD=1;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_CRYPT_LOAD_PASSWORD=2;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_CRYPT_LOAD_PASSWORD_NO_UI=3; {Load password only if master password has already been entered!}</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_CRYPT_COPY_PASSWORD=4;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_CRYPT_MOVE_PASSWORD=5;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_CRYPT_DELETE_PASSWORD=6;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FS_CRYPTOPT_MASTERPASS_SET=1;&nbsp;&nbsp; {The user already has a master password defined}</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BG_DOWNLOAD=1;&nbsp; { Plugin supports downloads in background }</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BG_UPLOAD=2;&nbsp;&nbsp;&nbsp; { Plugin supports uploads in background }</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BG_ASK_USER=4;&nbsp; { Plugin requires separate connection for background transfers -&gt; ask user first }</B></div>
<div class="p8">&nbsp;</div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>type</B></div>
<div class="p8"><B>&nbsp; tRemoteInfo=record</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp; SizeLow,SizeHigh:longint;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp; LastWriteTime:TFileTime;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp; Attr:longint;</B></div>
<div class="p8"><B>&nbsp; end;</B></div>
<div class="p8"><B>&nbsp; pRemoteInfo=^tRemoteInfo;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>type</B></div>
<div class="p8"><B>&nbsp; tFsDefaultParamStruct=record</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp; size,</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp; PluginInterfaceVersionLow,</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp; PluginInterfaceVersionHi:longint;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp; DefaultIniName:array[0..MAX_PATH-1] of char;</B></div>
<div class="p8"><B>&nbsp; end;</B></div>
<div class="p8"><B>&nbsp; pFsDefaultParamStruct=^tFsDefaultParamStruct;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>{ callback functions }</B></div>
<div class="p8"><B>type</B></div>
<div class="p8"><B>&nbsp; TProgressProc=function(PluginNr:integer;SourceName,</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp; TargetName:pchar;PercentDone:integer):integer; stdcall;</B></div>
<div class="p8"><B>&nbsp; TProgressProcW=function(PluginNr:integer;SourceName,</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp; TargetName:pwidechar;PercentDone:integer):integer; stdcall;</B></div>
<div class="p8"><B>&nbsp; TLogProc=procedure(PluginNr,MsgType:integer;LogString:pchar); stdcall;</B></div>
<div class="p8"><B>&nbsp; TLogProcW=procedure(PluginNr,MsgType:integer;LogString:pwidechar); stdcall;</B></div>
<div class="p8"><B>&nbsp; TRequestProc=function(PluginNr,RequestType:integer;CustomTitle,CustomText,</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp; ReturnedText:pchar;maxlen:integer):bool; stdcall;</B></div>
<div class="p8"><B>&nbsp; TRequestProcW=function(PluginNr,RequestType:integer;CustomTitle,CustomText,</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp; ReturnedText:pwidechar;maxlen:integer):bool; stdcall;</B></div>
<div class="p8"><B>&nbsp; PCryptProc=^TCryptProc;</B></div>
<div class="p8"><B>&nbsp; TCryptProc=function(PluginNr,CryptoNumber:integer;mode:integer;ConnectionName,</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp; Password:pchar;maxlen:integer):integer; stdcall;PCryptProcW=^TCryptProcW;</B></div>
<div class="p8"><B>&nbsp; TCryptProcW=function(PluginNr,CryptoNumber:integer;mode:integer;ConnectionName,</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp; Password:pwidechar;maxlen:integer):integer; stdcall;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>{ Function prototypes - the callback functions MUST be implemented exactly like this! }</B></div>
<div class="p8"><B>{</B></div>
<div class="p8"><B>function FsInit(PluginNr:integer;pProgressProc:tProgressProc;pLogProc:tLogProc;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pRequestProc:tRequestProc):integer; stdcall;</B></div>
<div class="p8"><B>function FsInitW(PluginNr:integer;pProgressProcW:tProgressProcW;pLogProcW:tLogProcW;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pRequestProcW:tRequestProcW):integer; stdcall;</B></div>
<div class="p8"><B>procedure FsSetCryptCallback(CryptProc:TCryptProc;CryptoNr,Flags:integer); stdcall;</B></div>
<div class="p8"><B>procedure FsSetCryptCallbackW(CryptProcW:TCryptProcW;CryptoNr,Flags:integer); stdcall;</B></div>
<div class="p8"><B>function FsFindFirst(path :pchar;var FindData:tWIN32FINDDATA):thandle; stdcall;</B></div>
<div class="p8"><B>function FsFindFirstW(path :pwidechar;var FindData:tWIN32FINDDATAW):thandle; stdcall;</B></div>
<div class="p8"><B>function FsFindNext(Hdl:thandle;var FindData:tWIN32FINDDATA):bool; stdcall;</B></div>
<div class="p8"><B>function FsFindNextW(Hdl:thandle;var FindDataW:tWIN32FINDDATAW):bool; stdcall;</B></div>
<div class="p8"><B>function FsFindClose(Hdl:thandle):integer; stdcall;</B></div>
<div class="p8"><B>function FsMkDir(RemoteDir:pchar):bool; stdcall;</B></div>
<div class="p8"><B>function FsMkDirW(RemoteDir:pwidechar):bool; stdcall;</B></div>
<div class="p8"><B>function FsExecuteFile(MainWin:thandle;RemoteName,Verb:pchar):integer; stdcall;</B></div>
<div class="p8"><B>function FsExecuteFileW(MainWin:thandle;RemoteName,Verb:pwidechar):integer; stdcall;</B></div>
<div class="p8"><B>function FsRenMovFile(OldName,NewName:pchar;Move,OverWrite:bool;</B></div>
<div class="p8"><B>&nbsp; RemoteInfo:pRemoteInfo):integer; stdcall;</B></div>
<div class="p8"><B>function FsRenMovFileW(OldName,NewName:pwidechar;Move,OverWrite:bool;</B></div>
<div class="p8"><B>&nbsp; RemoteInfo:pRemoteInfo):integer; stdcall;</B></div>
<div class="p8"><B>function FsGetFile(RemoteName,LocalName:pchar;CopyFlags:integer;</B></div>
<div class="p8"><B>&nbsp; RemoteInfo:pRemoteInfo):integer; stdcall;</B></div>
<div class="p8"><B>function FsGetFileW(RemoteName,LocalName:pwidechar;CopyFlags:integer;</B></div>
<div class="p8"><B>&nbsp; RemoteInfo:pRemoteInfo):integer; stdcall;</B></div>
<div class="p8"><B>function FsPutFile(LocalName,RemoteName:pchar;CopyFlags:integer):integer; stdcall;</B></div>
<div class="p8"><B>function FsPutFileW(LocalName,RemoteName:pwidechar;CopyFlags:integer):integer; stdcall;</B></div>
<div class="p8"><B>function FsDeleteFile(RemoteName:pchar):bool; stdcall;</B></div>
<div class="p8"><B>function FsDeleteFileW(RemoteName:pwidechar):bool; stdcall;</B></div>
<div class="p8"><B>function FsRemoveDir(RemoteName:pchar):bool; stdcall;</B></div>
<div class="p8"><B>function FsRemoveDirW(RemoteName:pwidechar):bool; stdcall;</B></div>
<div class="p8"><B>function FsDisconnect(DisconnectRoot:pchar):bool; stdcall;</B></div>
<div class="p8"><B>function FsDisconnectW(DisconnectRoot:pwidechar):bool; stdcall;</B></div>
<div class="p8"><B>function FsSetAttr(RemoteName:pchar;NewAttr:integer):bool; stdcall;</B></div>
<div class="p8"><B>function FsSetAttrW(RemoteName:pwidechar;NewAttr:integer):bool; stdcall;</B></div>
<div class="p8"><B>function FsSetTime(RemoteName:pchar;CreationTime,LastAccessTime,</B></div>
<div class="p8"><B>&nbsp; LastWriteTime:PFileTime):bool; stdcall;</B></div>
<div class="p8"><B>function FsSetTimeW(RemoteName:pwidechar;CreationTime,LastAccessTime,</B></div>
<div class="p8"><B>&nbsp; LastWriteTime:PFileTime):bool; stdcall;</B></div>
<div class="p8"><B>procedure FsStatusInfo(RemoteDir:pchar;InfoStartEnd,InfoOperation:integer); stdcall;</B></div>
<div class="p8"><B>procedure FsStatusInfoW(RemoteDir:pwidechar;InfoStartEnd,InfoOperation:integer); stdcall;</B></div>
<div class="p8"><B>procedure FsGetDefRootName(DefRootName:pchar;maxlen:integer); stdcall;</B></div>
<div class="p8"><B>function FsExtractCustomIcon(RemoteName:pchar;ExtractFlags:integer;</B></div>
<div class="p8"><B>&nbsp; var TheIcon:hicon):integer; stdcall;</B></div>
<div class="p8"><B>function FsExtractCustomIconW(RemoteName:pwidechar;ExtractFlags:integer;</B></div>
<div class="p8"><B>&nbsp; var TheIcon:hicon):integer; stdcall;</B></div>
<div class="p8"><B>procedure FsSetDefaultParams(dps:pFsDefaultParamStruct); stdcall;</B></div>
<div class="p8"><B>function FsGetPreviewBitmap(RemoteName:pchar;width,height:integer,</B></div>
<div class="p8"><B>&nbsp; var ReturnedBitmap:hbitmap):integer; stdcall;</B></div>
<div class="p8"><B>function FsGetPreviewBitmapW(RemoteName:pwidechar;width,height:integer,</B></div>
<div class="p8"><B>&nbsp; var ReturnedBitmap:hbitmap):integer; stdcall;</B></div>
<div class="p8"><B>function FsLinksToLocalFiles:bool; stdcall;</B></div>
<div class="p8"><B>function FsGetLocalName(RemoteName:pchar;maxlen:integer):bool; stdcall;</B></div>
<div class="p8"><B>function FsGetLocalNameW(RemoteName:pwidechar;maxlen:integer):bool; stdcall;</B></div>
<div class="p8"><B>}</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>{****************************** content plugin part *****************************}</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>const ft_nomorefields=0;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_numeric_32=1;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_numeric_64=2;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_numeric_floating=3;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_date=4;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_time=5;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_boolean=6;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_multiplechoice=7;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_string=8;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_fulltext=9;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_datetime=10;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_stringw=11;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>// for ContentGetValue</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_nosuchfield=-1;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_fileerror=-2;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_fieldempty=-3;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_ondemand=-4;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_delayed=0;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>// for ContentSetValue</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ft_setsuccess=0;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setflags_first_attribute=1;&nbsp;&nbsp;&nbsp;&nbsp; {First attribute of this file}</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setflags_last_attribute=2;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setflags_only_date=4;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CONTENT_DELAYIFSLOW=1;&nbsp; // ContentGetValue called in foreground</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>type tContentDefaultParamStruct=record</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; size,</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PluginInterfaceVersionLow,</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PluginInterfaceVersionHi:longint;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DefaultIniName:array[0..MAX_PATH-1] of char;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp; end;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp; pContentDefaultParamStruct=^tContentDefaultParamStruct;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>type tdateformat=record</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wYear,wMonth,wDay:word;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp; end;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp; pdateformat=^tdateformat;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>type ttimeformat=record</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wHour,wMinute,wSecond:word;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp; end;</B></div>
<div class="p8"><B>&nbsp;&nbsp;&nbsp;&nbsp; ptimeformat=^ttimeformat;</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>{ Function prototypes: }</B></div>
<div class="p8"><B>{</B></div>
<div class="p8"><B>procedure FsContentGetDetectString(DetectString:pchar;maxlen:integer); stdcall;</B></div>
<div class="p8"><B>function FsContentGetSupportedField(FieldIndex:integer;FieldName:pchar;</B></div>
<div class="p8"><B>&nbsp; Units:pchar;maxlen:integer):integer; stdcall;</B></div>
<div class="p8"><B>function FsContentGetValue(FileName:pchar;FieldIndex,UnitIndex:integer;FieldValue:pbyte;</B></div>
<div class="p8"><B>&nbsp; maxlen,flags:integer):integer; stdcall;</B></div>
<div class="p8"><B>function FsContentGetValueW(FileName:pwidechar;FieldIndex,UnitIndex:integer;FieldValue:pbyte;</B></div>
<div class="p8"><B>&nbsp; maxlen,flags:integer):integer; stdcall;</B></div>
<div class="p8"><B>procedure FsContentSetDefaultParams(dps:pContentDefaultParamStruct); stdcall;</B></div>
<div class="p8"><B>procedure FsContentStopGetValue(FileName:pchar); stdcall;</B></div>
<div class="p8"><B>procedure FsContentStopGetValueW(FileName:pwidechar); stdcall;</B></div>
<div class="p8"><B>function FsContentGetDefaultSortOrder(FieldIndex:integer):integer; stdcall;</B></div>
<div class="p8"><B>function FsContentGetSupportedFieldFlags(FieldIndex:integer):integer; stdcall;</B></div>
<div class="p8"><B>function FsContentSetValue(FileName:pchar;FieldIndex,UnitIndex,FieldType:integer;</B></div>
<div class="p8"><B>&nbsp; FieldValue:pbyte;flags:integer):integer; stdcall;</B></div>
<div class="p8"><B>function FsContentSetValueW(FileName:pwidechar;FieldIndex,UnitIndex,FieldType:integer;</B></div>
<div class="p8"><B>&nbsp; FieldValue:pbyte;flags:integer):integer; stdcall;</B></div>
<div class="p8"><B>function FsContentGetDefaultView(ViewContents,ViewHeaders,ViewWidths,</B></div>
<div class="p8"><B>&nbsp; ViewOptions:pchar;maxlen:integer):bool; stdcall;</B></div>
<div class="p8"><B>function FsContentGetDefaultViewW(ViewContents,ViewHeaders,ViewWidths,</B></div>
<div class="p8"><B>&nbsp; ViewOptions:pwidechar;maxlen:integer):bool; stdcall;</B></div>
<div class="p8"><B>function FsGetBackgroundFlags:integer; stdcall;</B></div>
<div class="p8"><B>}</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>implementation</B></div>
<div class="p8">&nbsp;</div>
<div class="p8"><B>end.
</B>
</div>
</BODY></HTML>
